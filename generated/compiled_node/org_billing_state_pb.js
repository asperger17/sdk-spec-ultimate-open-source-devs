// source: org_billing_state.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.com.elarian.hera.proto.BillingPlanUsage', null, global);
goog.exportSymbol('proto.com.elarian.hera.proto.OrgBillingState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.elarian.hera.proto.BillingPlanUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.elarian.hera.proto.BillingPlanUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.elarian.hera.proto.BillingPlanUsage.displayName = 'proto.com.elarian.hera.proto.BillingPlanUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.elarian.hera.proto.OrgBillingState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.elarian.hera.proto.OrgBillingState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.elarian.hera.proto.OrgBillingState.displayName = 'proto.com.elarian.hera.proto.OrgBillingState';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.com.elarian.hera.proto.BillingPlanUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.elarian.hera.proto.BillingPlanUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.elarian.hera.proto.BillingPlanUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    activeUsers: jspb.Message.getFieldWithDefault(msg, 1, 0),
    appUsersMap: (f = msg.getAppUsersMap()) ? f.toObject(includeInstance, undefined) : [],
    engagement: jspb.Message.getFieldWithDefault(msg, 3, 0),
    analytics: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fragments: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.elarian.hera.proto.BillingPlanUsage;
  return proto.com.elarian.hera.proto.BillingPlanUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.elarian.hera.proto.BillingPlanUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActiveUsers(value);
      break;
    case 2:
      var value = msg.getAppUsersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEngagement(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAnalytics(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFragments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.elarian.hera.proto.BillingPlanUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.elarian.hera.proto.BillingPlanUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.elarian.hera.proto.BillingPlanUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActiveUsers();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAppUsersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getEngagement();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAnalytics();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getFragments();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int32 active_users = 1;
 * @return {number}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.getActiveUsers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage} returns this
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.setActiveUsers = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, int32> app_users = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.getAppUsersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage} returns this
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.clearAppUsersMap = function() {
  this.getAppUsersMap().clear();
  return this;};


/**
 * optional int64 engagement = 3;
 * @return {number}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.getEngagement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage} returns this
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.setEngagement = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 analytics = 4;
 * @return {number}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.getAnalytics = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage} returns this
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.setAnalytics = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 fragments = 5;
 * @return {number}
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.getFragments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.elarian.hera.proto.BillingPlanUsage} returns this
 */
proto.com.elarian.hera.proto.BillingPlanUsage.prototype.setFragments = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.toObject = function(opt_includeInstance) {
  return proto.com.elarian.hera.proto.OrgBillingState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.elarian.hera.proto.OrgBillingState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.elarian.hera.proto.OrgBillingState.toObject = function(includeInstance, msg) {
  var f, obj = {
    plansMap: (f = msg.getPlansMap()) ? f.toObject(includeInstance, proto.com.elarian.hera.proto.BillingPlanUsage.toObject) : [],
    offPlan: (f = msg.getOffPlan()) && proto.com.elarian.hera.proto.BillingPlanUsage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.elarian.hera.proto.OrgBillingState}
 */
proto.com.elarian.hera.proto.OrgBillingState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.elarian.hera.proto.OrgBillingState;
  return proto.com.elarian.hera.proto.OrgBillingState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.elarian.hera.proto.OrgBillingState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.elarian.hera.proto.OrgBillingState}
 */
proto.com.elarian.hera.proto.OrgBillingState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getPlansMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.com.elarian.hera.proto.BillingPlanUsage.deserializeBinaryFromReader, 0, new proto.com.elarian.hera.proto.BillingPlanUsage());
         });
      break;
    case 2:
      var value = new proto.com.elarian.hera.proto.BillingPlanUsage;
      reader.readMessage(value,proto.com.elarian.hera.proto.BillingPlanUsage.deserializeBinaryFromReader);
      msg.setOffPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.elarian.hera.proto.OrgBillingState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.elarian.hera.proto.OrgBillingState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.elarian.hera.proto.OrgBillingState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlansMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.com.elarian.hera.proto.BillingPlanUsage.serializeBinaryToWriter);
  }
  f = message.getOffPlan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.elarian.hera.proto.BillingPlanUsage.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, BillingPlanUsage> plans = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.com.elarian.hera.proto.BillingPlanUsage>}
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.getPlansMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.com.elarian.hera.proto.BillingPlanUsage>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.com.elarian.hera.proto.BillingPlanUsage));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.elarian.hera.proto.OrgBillingState} returns this
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.clearPlansMap = function() {
  this.getPlansMap().clear();
  return this;};


/**
 * optional BillingPlanUsage off_plan = 2;
 * @return {?proto.com.elarian.hera.proto.BillingPlanUsage}
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.getOffPlan = function() {
  return /** @type{?proto.com.elarian.hera.proto.BillingPlanUsage} */ (
    jspb.Message.getWrapperField(this, proto.com.elarian.hera.proto.BillingPlanUsage, 2));
};


/**
 * @param {?proto.com.elarian.hera.proto.BillingPlanUsage|undefined} value
 * @return {!proto.com.elarian.hera.proto.OrgBillingState} returns this
*/
proto.com.elarian.hera.proto.OrgBillingState.prototype.setOffPlan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.elarian.hera.proto.OrgBillingState} returns this
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.clearOffPlan = function() {
  return this.setOffPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.elarian.hera.proto.OrgBillingState.prototype.hasOffPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.com.elarian.hera.proto);
